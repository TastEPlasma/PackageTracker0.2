<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:PackageTracker" mc:Ignorable="d" x:Class="PackageTracker.MainWindow"
        Title="Package Tracker" Height="390" Width="650" Loaded="Window_Loaded"
        >
    <Window.Resources>
        <CollectionViewSource x:Key="trackerContextViewSource" d:DesignSource="{d:DesignInstance {x:Type local:TrackerContext}, CreateList=True}"/>
        <CollectionViewSource x:Key="trackerContextPackagesViewSource" Source="{Binding Packages, Source={StaticResource trackerContextViewSource}}"/>
        <CollectionViewSource x:Key="trackerDataViewSource" d:DesignSource="{d:DesignInstance {x:Type local:TrackerData}, CreateList=True}"/>
        <ResourceDictionary x:Key="BackgroundColors">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CustomResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid DataContext="{StaticResource trackerContextPackagesViewSource}" Margin="-4,0,-40,0" HorizontalAlignment="Center" Width="763">

        <Button x:Name="Update" Content="Update" HorizontalAlignment="Center" Margin="323,0,364,40" VerticalAlignment="Bottom" Width="76" Click="Update_Click" Height="20" RenderTransformOrigin="0.227,-0.9"/>
        <DataGrid x:Name="trackerDataDataGrid"  AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource trackerDataViewSource}}" Margin="44,16,81,81" RowDetailsVisibilityMode="Visible"  Background="White" HorizontalAlignment="Center" Width="auto">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" Resources="{StaticResource BackgroundColors}">
                    <Setter Property="Background" Value="{StaticResource Other}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Delivered" >
                            <Setter Property="Background" Value="{StaticResource Delivered}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="NotFound">
                            <Setter Property="Background" Value="{StaticResource NotFound}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="NotShipped">
                            <Setter Property="Background" Value="{StaticResource NotShipped}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Other">
                            <Setter Property="Background" Value="{StaticResource Other}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="OutForDelivery">
                            <Setter Property="Background" Value="{StaticResource OutForDelivery}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Returned">
                            <Setter Property="Background" Value="{StaticResource Returned}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Shipped">
                            <Setter Property="Background" Value="{StaticResource Shipped}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="PickUp">
                            <Setter Property="Background" Value="{StaticResource PickUp}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn x:Name="deleteme" Binding="{Binding DeleteMe}" Header="Delete" Width="45"/>
                <DataGridTextColumn x:Name="customNameColumn" Binding="{Binding CustomName}" Header="Custom Name" Width="130"/>
                <DataGridTextColumn x:Name="trackingNumberColumn" Binding="{Binding TrackingNumber}" Header="Tracking Number" Width="130"/>
                <DataGridTextColumn x:Name="locationColumn" Binding="{Binding Location}" Header="Location" Width="180" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="packageStatusColumn" Binding="{Binding StatusOfPackage}" Header="Status" Width="100" IsReadOnly="True"/>
                <DataGridTemplateColumn x:Name="carrierCodeColumn" Header="Carrier" Width="45" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding CarrierCode}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
        <ProgressBar Name ="Progress" Visibility="Hidden"  IsIndeterminate="True" HorizontalAlignment="Center" Height="10" Margin="310,0,353,65" VerticalAlignment="Bottom" Width="100"/>
        <TextBlock Text="Auto-updates is " Height="20" Width="auto" HorizontalAlignment="Left" Margin="222,0,0,0" 
                 VerticalAlignment="Bottom"></TextBlock>
        <TextBlock Name="displayUpdateToggle"  Text="OFF" Height="20" Width="auto" HorizontalAlignment="Left" Margin="323,0,0,0" 
                 VerticalAlignment="Bottom"></TextBlock>
        <TextBlock Text="and is set to every " Height="20" Width="auto" HorizontalAlignment="Left" Margin="355,0,0,0" 
                 VerticalAlignment="Bottom"></TextBlock>
        <TextBlock Name="delayLength" Text="1" Height="20" Width="auto" HorizontalAlignment="Left" Margin="460,0,0,0" 
                 VerticalAlignment="Bottom"></TextBlock>
        <TextBlock Text=" hours. " Height="20" Width="auto" HorizontalAlignment="Left" Margin="471,0,0,0" 
                 VerticalAlignment="Bottom"></TextBlock>


        <Menu HorizontalAlignment="Left" Height="18" Margin="44,0,0,0" VerticalAlignment="Top" Width="638">
            <MenuItem Header="File" Visibility="Visible" Name="menuFile" >
                <MenuItem Header="Update" Click="Update_Click"></MenuItem>
                <MenuItem Header="Quit" Click="Quit_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Configure Credentials">
                    <MenuItem Header="FedEx"></MenuItem>
                    <MenuItem Header="UPS"></MenuItem>
                    <MenuItem Header="USPS"></MenuItem>
                </MenuItem>

                <Separator></Separator>
                <MenuItem Name="HourlyUpdatesBox" Header="Toggle Auto Update" IsCheckable="True" Checked="CheckBox_Checked"></MenuItem>
                <MenuItem Header="Set Auto-Update Delay" Click="Delay_Click"></MenuItem>
            </MenuItem>
        </Menu>

        <Popup Name="CredentialEntry" Placement="Center" Width="300" Height="200" IsOpen="False">
            <StackPanel Background="BlanchedAlmond"  Margin="-250,-150,250,150">
                <TextBlock Background="AntiqueWhite" Width="500" HorizontalAlignment="Center"><Run Text="                                    Enter Custom Credentials For FedEx Web Services"/></TextBlock>
                
                <TextBlock Background="RosyBrown" Width="100" Height="20" FontWeight="Bold" HorizontalAlignment="Left" Margin="10,10,0,0"><Run Text="User Key: "/></TextBlock>
                <TextBox x:Name="FedExUserKEY" Margin="80,-20,0,0" Width="150" Height="20"/>

                <TextBlock Background="RosyBrown" Width="100" Height="20" FontWeight="Bold" HorizontalAlignment="Left" Margin="10,10,0,0"><Run Text="User Password: "/></TextBlock>
                <TextBox x:Name="FedExUserPASSWORD" Margin="80,-20,0,0" Width="150" Height="20"/>

                <TextBlock Background="RosyBrown" Width="100" Height="20" FontWeight="Bold" HorizontalAlignment="Left" Margin="10,10,0,0"><Run Text="User Account: "/></TextBlock>
                <TextBox x:Name="FedExUserACCOUNTNUMBER" Margin="80,-20,0,0" Width="150" Height="20"/>

                <TextBlock Background="RosyBrown" Width="100" Height="20" FontWeight="Bold" HorizontalAlignment="Left" Margin="10,10,0,0"><Run Text="User Meter: "/></TextBlock>
                <TextBox x:Name="FedExUserMETERNUMBER" Margin="80,-20,0,0" Width="150" Height="20"/>

            </StackPanel>
        </Popup>


        <Popup Name="DelayAdjuster" Placement="Center"
            Width="110" Height="110" IsOpen="False">
            <StackPanel>
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0.191"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
                <TextBlock x:Name="delayHeader" Background="#FFD8D8D8" Width="110" HorizontalAlignment="Center"><Run Text="     Delay In Hours"/></TextBlock>
                <Slider x:Name="delaySlider" Width="100" Value="1" Orientation="Horizontal" HorizontalAlignment="Center"
            		IsSnapToTickEnabled="True" Minimum="1" Maximum="24" AutoToolTipPrecision="1" AutoToolTipPlacement="BottomRight"
            		TickPlacement="BottomRight" TickFrequency="1" Margin="0,5" />
                <Button Height="30" Width="70" x:Name="updateDelayAmountButton" Content="Save" Click="delayButtonClose_Click" Margin="15,20" />
            </StackPanel>
        </Popup>


    </Grid>

</Window>
